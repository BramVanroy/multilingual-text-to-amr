[build-system]
requires = ["setuptools >= 40.6.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi_amr"
# Do not forget to change in __init__.py too!
version = "0.0.1"
authors = [
    {name = "Bram Vanroy", email = "bramvanroy@hotmail.com"},
]
maintainers = [
    {name = "Bram Vanroy", email = "bramvanroy@hotmail.com"},
]
description = "Generating AMR from text in multiple languages"
readme = "README.md"
keywords = ["nlp", "amr", "abstract-meaning-representation", "semantic-parsing"]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Text Processing",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
]

requires-python = ">=3.11"
dependencies = [
    "accelerate==0.21.0",
    "evaluate==0.4.0",
    "ftfy==6.1.1",
    "networkx==3.0",
    "optimum==1.10.1",
    "peft==0.4.0",
    "penman==1.2.2",
    "sacrebleu==2.3.1",
    "scikit-learn==1.3.0",
    "sentencepiece==0.1.99",
    "smatch==1.0.4",
    "torch==2.0.1",
    "tqdm==4.65.0",
    "transformers==4.31.0"
]

[project.urls]
homepage = "https://github.com/BramVanroy/multilingual-text-to-amr"
documentation = "https://github.com/BramVanroy/multilingual-text-to-amr"
repository = "https://github.com/BramVanroy/multilingual-text-to-amr.git"
changelog = "https://github.com/BramVanroy/multilingual-text-to-amr/blob/master/CHANGELOG.md"

[project.optional-dependencies]
dev = ["flake8", "black", "isort"]

# TOOLS
[tool.setuptools]
include-package-data = true
license-files = ['LICEN[CS]E*']

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 119
target-version = ["py311"]

[tool.isort]
profile = "black"
ensure_newline_before_comments = true
line_length = 119
default_section = "FIRSTPARTY"
known_first_party = "multi_amr"
lines_after_imports = 2

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning:tensorflow.*:"]
markers = ["slow: mark test as slow. Especially useful for neural metrics."]

# flake8 is in setup.cfg as it does not support toml:
# https://github.com/PyCQA/flake8/issues/234
